apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: [variables('KUBE_BOT_IMAGE_NAME')]
  namespace: oauth
spec:
  replicas: 2
  revisionHistoryLimit: 2  
  template:
    metadata:
      labels:
        app: [variables('KUBE_BOT_IMAGE_NAME')]
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      containers:
      - name: [variables('KUBE_BOT_IMAGE_NAME')]
        image: "[variables('KUBE_BOT_CONTAINER_REGISTRY')]/[variables('KUBE_BOT_CONTAINER_REPO')]/oauthservice:[variables('KUBE_BOT_IMAGE_TAG')]"
        imagePullPolicy: IfNotPresent
        args:
          - "-config=/etc/config/oauth2_proxy.cfg"
          - "upstream=http://packagescampaignmanager-web.hotels/admin/web/hotels/serenityservice/"
          - "provider=azure"
          - "cookie-name=adminauth"
          - "cookie-secure=true"
          - "cookie-expire=168h0m"
          - "cookie-refresh=10m"
          - "cookie-domain=devservices.webjet.com.au"
          - "email-domain=*""
          - "http-address=http://0.0.0.0:4180"
          - "azure-tenant=5de0e68c-0afd-4a67-b089-31f168aa4ca0"
          - "pass-groups=true"
          - "approval-prompt=""
          - "skip-provider-button=true"
          - "redirect-url=https://devservices.webjet.com.au/oauth2/callback"
          - "-pass-user-headers=true"
          - "-pass-groups=true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "100m"
          limits:
            memory: "5120Mi"
            cpu: "1.5"
        ports:
          - containerPort: 4180
        volumeMounts:
        - name: oauthvolumemount
          mountPath: /etc/config
      volumes:
      - name: oauthvolumemount
        secret:
          secretName: oauth2config
      imagePullSecrets:
      - name: registrykey
---
kind: Service
apiVersion: v1
metadata:
  name: [variables('KUBE_BOT_IMAGE_NAME')]
  namespace: oauth
spec:
  selector:
    app: [variables('KUBE_BOT_IMAGE_NAME')]
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4180
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/rewrite-target: /
  name: [variables('KUBE_BOT_IMAGE_NAME')]
  namespace: oauth
spec:
  tls:
  - hosts:
    - devservices.webjet.com.au
    secretName: webjet-tls-ssl 
  rules:
  - host: devservices.webjet.com.au
    http:
      paths:
      - path: /admin/
        backend:
          serviceName: [variables('KUBE_BOT_IMAGE_NAME')]
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  name: [variables('KUBE_BOT_IMAGE_NAME')]-oauth
  namespace: oauth
spec:
  tls:
  - hosts:
    - devservices.webjet.com.au
    secretName: webjet-tls-ssl 
  rules:
  - host: devservices.webjet.com.au
    http:
      paths:
      - path: /oauth2
        backend:
          serviceName: [variables('KUBE_BOT_IMAGE_NAME')]
          servicePort: 80

